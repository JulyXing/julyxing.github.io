<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>JulyXing</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://julyxing.github.io/"/>
  <updated>2016-12-30T07:11:11.417Z</updated>
  <id>https://julyxing.github.io/</id>
  
  <author>
    <name>JulyXing</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>ApacheAb压力测试工具</title>
    <link href="https://julyxing.github.io/2016/12/30/ApacheAb%E5%8E%8B%E5%8A%9B%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/"/>
    <id>https://julyxing.github.io/2016/12/30/ApacheAb压力测试工具/</id>
    <published>2016-12-30T07:04:56.000Z</published>
    <updated>2016-12-30T07:11:11.417Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1-安装及配置"><a href="#1-安装及配置" class="headerlink" title="1.安装及配置"></a>1.安装及配置</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">sudo apt-get install apache2</div><div class="line"></div><div class="line">sudo vi /etc/apache2/port.conf   将 80 修改为 81</div><div class="line">目的：避免 80 端口被占用导致 nginx 无法使用，安装 apache2 目的是使用 ab 工具对接口做压力测试，并不是使用 apache 搭建服务器</div></pre></td></tr></table></figure>
<h3 id="2-使用"><a href="#2-使用" class="headerlink" title="2.使用"></a>2.使用</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">ab -h                   查看帮助文档</div><div class="line"></div><div class="line">-n  发送请求个数</div><div class="line">-C  同一时间内请求并发数</div><div class="line">-k  服务器 keeplive 时间</div><div class="line">-t  设置测试时间 (如果有对接口请求时间需求可配置该参数)</div></pre></td></tr></table></figure>
<h3 id="3-GET请求测试"><a href="#3-GET请求测试" class="headerlink" title="3.GET请求测试"></a>3.GET请求测试</h3><p>说明：因为当前 API 设计是使用 POST 方式请求，如果想使用 GET 方式测试接口性能，首先将接口请求方式调整。</p>
<p>模拟 GET 请求网站首页接口，10000次请求，并发数为100</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ab -n10000 -C100 url</div></pre></td></tr></table></figure>
<h3 id="4-POST请求测试"><a href="#4-POST请求测试" class="headerlink" title="4.POST请求测试"></a>4.POST请求测试</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">关闭接口缓存测试，1000个请求同时10个并发测试列表接口性能</div><div class="line"></div><div class="line">ab -n1000 -c10 -k -T &apos;application/x-www-form-urlencoded&apos; -p post.json url</div><div class="line"></div><div class="line">post.json    post 请求参数文件，存放接口需要的参数值</div><div class="line">格式：</div><div class="line">&#123;&quot;pagesize&quot;:48,&quot;page&quot;:1,&quot;sort&quot;:&quot;xin&quot;,&quot;type&quot;:&quot;xiaoyuan&quot;&#125;</div><div class="line"></div><div class="line">或</div><div class="line"></div><div class="line">&#123;</div><div class="line">  &quot;pagesize&quot;:48,</div><div class="line">  &quot;page&quot;:1,</div><div class="line">  &quot;sort&quot;:&quot;xin&quot;,</div><div class="line">  &quot;type&quot;:&quot;xiaoyuan&quot;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="5-测试数据分析"><a href="#5-测试数据分析" class="headerlink" title="5.测试数据分析"></a>5.测试数据分析</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div></pre></td><td class="code"><pre><div class="line">Benchmarking server_name (be patient)</div><div class="line">Completed 100 requests</div><div class="line">Completed 200 requests</div><div class="line">Completed 300 requests</div><div class="line">Completed 400 requests</div><div class="line">Completed 500 requests</div><div class="line">Completed 600 requests</div><div class="line">Completed 700 requests</div><div class="line">Completed 800 requests</div><div class="line">Completed 900 requests</div><div class="line">Completed 1000 requests</div><div class="line">Finished 1000 requests</div><div class="line"></div><div class="line"></div><div class="line">Server Software:        nginx</div><div class="line">Server Hostname:        server_name</div><div class="line">Server Port:            80</div><div class="line"></div><div class="line">Document Path:          /list/</div><div class="line">Document Length:        36705 bytes</div><div class="line"></div><div class="line">Concurrency Level:      10</div><div class="line">Time taken for tests:   14.384 seconds</div><div class="line">Complete requests:      1000</div><div class="line">Failed requests:        0</div><div class="line">Keep-Alive requests:    0</div><div class="line">Total transferred:      36951000 bytes</div><div class="line">Total body sent:        245000</div><div class="line">HTML transferred:       36705000 bytes</div><div class="line">Requests per second:    69.52 [#/sec] (mean)</div><div class="line">Time per request:       143.840 [ms] (mean)</div><div class="line">Time per request:       14.384 [ms] (mean, across all concurrent requests)</div><div class="line">Transfer rate:          2508.68 [Kbytes/sec] received</div><div class="line">                        16.63 kb/s sent</div><div class="line">                        2525.32 kb/s total</div><div class="line"></div><div class="line">Connection Times (ms)</div><div class="line">              min  mean[+/-sd] median   max</div><div class="line">Connect:        0    0   0.0      0       0</div><div class="line">Processing:    83  143  74.2    139    1974</div><div class="line">Waiting:       77  136  73.9    131    1962</div><div class="line">Total:         83  144  74.2    139    1974</div><div class="line"></div><div class="line">Percentage of the requests served within a certain time (ms)</div><div class="line">  50%    139</div><div class="line">  66%    146</div><div class="line">  75%    151</div><div class="line">  80%    155</div><div class="line">  90%    168</div><div class="line">  95%    181</div><div class="line">  98%    198</div><div class="line">  99%    221</div><div class="line"> 100%   1974 (longest request)</div><div class="line"></div><div class="line">每个请求时间消耗 143.840ms ≈ 0.1s</div></pre></td></tr></table></figure>
<h3 id="6-标准"><a href="#6-标准" class="headerlink" title="6.标准"></a>6.标准</h3><p>说明: 关闭接口缓存设置，单纯测试接口性能。</p>
<h4 id="6-1-参数配置："><a href="#6-1-参数配置：" class="headerlink" title="6.1 参数配置："></a>6.1 参数配置：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">-n10000 -c10 -k -t1 -T &apos;application/x-www-form-urlencoded&apos;</div></pre></td></tr></table></figure>
<h4 id="6-2-结果分析："><a href="#6-2-结果分析：" class="headerlink" title="6.2 结果分析："></a>6.2 结果分析：</h4><ul>
<li>每次请求时间（最优时间 0.1s， 最低时间 0.5s）</li>
<li>观察有效请求成功率</li>
</ul>
<h4 id="6-3-外在因素："><a href="#6-3-外在因素：" class="headerlink" title="6.3 外在因素："></a>6.3 外在因素：</h4><ul>
<li>机器本身配置</li>
<li>数据库数据体量</li>
<li>服务器和数据库配置</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;1-安装及配置&quot;&gt;&lt;a href=&quot;#1-安装及配置&quot; class=&quot;headerlink&quot; title=&quot;1.安装及配置&quot;&gt;&lt;/a&gt;1.安装及配置&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=
    
    </summary>
    
      <category term="Apache" scheme="https://julyxing.github.io/categories/Apache/"/>
    
    
      <category term="Apache" scheme="https://julyxing.github.io/tags/Apache/"/>
    
  </entry>
  
  <entry>
    <title>VPN服务搭建及使用</title>
    <link href="https://julyxing.github.io/2016/12/28/VPN%E6%9C%8D%E5%8A%A1%E6%90%AD%E5%BB%BA%E5%8F%8A%E4%BD%BF%E7%94%A8/"/>
    <id>https://julyxing.github.io/2016/12/28/VPN服务搭建及使用/</id>
    <published>2016-12-28T14:41:28.000Z</published>
    <updated>2016-12-30T06:53:42.153Z</updated>
    
    <content type="html"><![CDATA[<h4 id="Debian-系统下搭建-VPN-服务-和-Ubuntu-下应用"><a href="#Debian-系统下搭建-VPN-服务-和-Ubuntu-下应用" class="headerlink" title="Debian 系统下搭建 VPN 服务 和 Ubuntu 下应用"></a>Debian 系统下搭建 VPN 服务 和 Ubuntu 下应用</h4><hr>
<p>时间： 2016年01月17日</p>
<p>说明： 转载 <a href="http://www.tofree.net/posts/237.html" target="_blank" rel="external">Debian 操作系统架设 VPN 服务器图文教程</a></p>
<a id="more"></a>
<p>1 安装 pptpd 服务<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo apt-get install pptpd</div></pre></td></tr></table></figure></p>
<p>2 配置 pptpd<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">编辑 /etc/pptpd.conf 文件</div><div class="line">  sudo vi /etc/pptpd.conf 将下面命令前 # 去掉</div><div class="line">  #localip 192.168.0.1 </div><div class="line">  #remoteip 192.168.0.234-238,192.168.10.245</div></pre></td></tr></table></figure></p>
<p>3 配置 DNS<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">编辑 /etc/ppp/options 文件</div><div class="line">  sudo vi /etc/ppp/options 加入下面 2 行命令</div><div class="line">  ms-dns 8.8.8.8 </div><div class="line">  ms-dns 8.8.4.4</div><div class="line">  注： 该 dns 为 google 提供的 dns 地址，因此 vpn 连接时会通过 google 去访问相关页面。</div></pre></td></tr></table></figure></p>
<p>4 开启IP转发<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">编辑 /etc/sysctl.conf 文件</div><div class="line">  sudo /etc/sysctl.conf  去掉下面代码前的 #</div><div class="line">  net.ipv4.ip_forward=1</div></pre></td></tr></table></figure></p>
<p>5 添加VPN用户名密码<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">编辑 /etc/ppp/chap-secrets 文件</div><div class="line">  sudo /etc/ppp/chap-secrets 输入符合下面格式的 vpn 账号和密码</div><div class="line">  用户名 pptpd 密码 *</div><div class="line">  例如： xingliu pptpd 12345678 *</div></pre></td></tr></table></figure></p>
<p>6 制作转发脚本<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">把转发规则写成文件，执行命令：vi /etc/pptpdfirewall.sh 然后内容输入：</div><div class="line">sudo /sbin/iptables -t nat -A POSTROUTING -s 192.168.0.0/24 -j SNAT --to-source 你的VPS公网IP </div><div class="line">sudo /sbin/iptables -A FORWARD -s 192.168.0.0/24 -p tcp -m tcp --tcp-flags FIN,SYN,RST,ACK SYN -j TCPMSS --set-mss 1356</div></pre></td></tr></table></figure></p>
<p>7 设置文件权限<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">chmod 755 /etc/pptpdfirewall.sh</div></pre></td></tr></table></figure></p>
<p>8 设置开机自启动<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">编辑 /etc/init.d/rc.local ，在最后一行加入下面代码：</div><div class="line">sh /etc/pptpdfirewall.sh</div><div class="line">注： pptpdfirewall.sh 文件路径和 rc.local 文件中执行的路径保持一致。</div></pre></td></tr></table></figure></p>
<p>9 重启 VPS<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo reboot</div></pre></td></tr></table></figure></p>
<p>10 应用<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">因为 ubuntu 系统提供 vpn 连接服务，所以配置 vpn 账号就可以使用。</div><div class="line">10.1 步骤</div><div class="line">  打开 System Setting --&gt; NetWork 点击左下角 + 选择 VPN --&gt; create --&gt; pptp --&gt; create</div><div class="line">10.2 配置</div><div class="line">  Gateway  vps 公网 ip</div><div class="line">  optional （在 vps 中填入的 vpn 用户和密码）</div><div class="line">    username xingliu</div><div class="line">    password 12345678</div><div class="line">  点击 save 在右上角 网络 图标出点击选择 vpn</div><div class="line">10.3 调整</div><div class="line">  在 10.2 步中，最后提示 vpn 连接失败，所以需要修改 vpn 配置，打开 vpn 配置窗口选择 Advanced 取消勾选 PAP CHAP EAP 选中</div><div class="line">  Use Point-to-Point encryption(MPPE) 点击 OK --&gt; Save 重新连接 vpn，此时会提示 vpn 登陆成功,然后在终端中可以尝试 </div><div class="line">  ping google.com 会发现有数据响应。</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;Debian-系统下搭建-VPN-服务-和-Ubuntu-下应用&quot;&gt;&lt;a href=&quot;#Debian-系统下搭建-VPN-服务-和-Ubuntu-下应用&quot; class=&quot;headerlink&quot; title=&quot;Debian 系统下搭建 VPN 服务 和 Ubuntu 下应用&quot;&gt;&lt;/a&gt;Debian 系统下搭建 VPN 服务 和 Ubuntu 下应用&lt;/h4&gt;&lt;hr&gt;
&lt;p&gt;时间： 2016年01月17日&lt;/p&gt;
&lt;p&gt;说明： 转载 &lt;a href=&quot;http://www.tofree.net/posts/237.html&quot;&gt;Debian 操作系统架设 VPN 服务器图文教程&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Linux" scheme="https://julyxing.github.io/categories/Linux/"/>
    
    
      <category term="debian" scheme="https://julyxing.github.io/tags/debian/"/>
    
  </entry>
  
  <entry>
    <title>SublimeText3</title>
    <link href="https://julyxing.github.io/2016/12/28/SublimeText3/"/>
    <id>https://julyxing.github.io/2016/12/28/SublimeText3/</id>
    <published>2016-12-28T14:40:03.000Z</published>
    <updated>2016-12-30T06:53:42.153Z</updated>
    
    <content type="html"><![CDATA[<h4 id="SublimeText3-日常使用技巧"><a href="#SublimeText3-日常使用技巧" class="headerlink" title="SublimeText3 日常使用技巧"></a>SublimeText3 日常使用技巧</h4><hr>
<p>1 下载(download)<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://www.sublimetext.com/3</div></pre></td></tr></table></figure></p>
<p>2 包管理(package mange)<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">import urllib.request,os,hashlib; h = &apos;2915d1851351e5ee549c20394736b442&apos; + &apos;8bc59f460fa1548d1514676163dafc88&apos;; pf = &apos;Package Control.sublime-package&apos;; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( &apos;http://packagecontrol.io/&apos; + pf.replace(&apos; &apos;, &apos;%20&apos;)).read(); dh = hashlib.sha256(by).hexdigest(); print(&apos;Error validating download (got %s instead of %s), please try manual install&apos; % (dh, h)) if dh != h else open(os.path.join( ipp, pf), &apos;wb&apos; ).write(by)</div></pre></td></tr></table></figure></p>
<p>3 插件(plug-in)<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div></pre></td><td class="code"><pre><div class="line">格式：</div><div class="line">描述</div><div class="line">  插件名</div><div class="line">  插件链接</div><div class="line"></div><div class="line">3.1 文件和文件夹增强</div><div class="line">  Side​Bar​Enhancements</div><div class="line">  https://packagecontrol.io/packages/SideBarEnhancements</div><div class="line"></div><div class="line">3.2 Html</div><div class="line">  Emmet (Zen Coding)</div><div class="line">  https://packagecontrol.io/packages/Emmet</div><div class="line"></div><div class="line">3.3 文件名补全</div><div class="line">  Autofilename</div><div class="line">  https://packagecontrol.io/packages/AutoFileName</div><div class="line"></div><div class="line">3.4 代码注释</div><div class="line">  Docblockr</div><div class="line">  https://packagecontrol.io/packages/DocBlockr</div><div class="line"></div><div class="line">3.5 代码补全</div><div class="line">  SublimeCodeIntel</div><div class="line">  https://packagecontrol.io/packages/SublimeCodeIntel</div><div class="line"></div><div class="line">3.6 Markdown 编辑器 和 预览</div><div class="line">  MarkdownEditing      编辑器</div><div class="line">  https://packagecontrol.io/packages/MarkdownEditing</div><div class="line"></div><div class="line">  OmniMarkupPreviewer  浏览器预览</div><div class="line">  https://packagecontrol.io/packages/OmniMarkupPreviewer</div><div class="line"></div><div class="line">3.7 Material theme主题</div><div class="line">  Material Theme</div><div class="line">  https://packagecontrol.io/packages/Material%20Theme</div></pre></td></tr></table></figure></p>
<p>4 配置<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">    &quot;auto_complete&quot;: true,</div><div class="line">    &quot;auto_match_enabled&quot;: true,</div><div class="line">    &quot;color_scheme&quot;: &quot;Packages/Material Theme/schemes/Material-Theme.tmTheme&quot;,</div><div class="line">    &quot;default_encoding&quot;: &quot;UTF-8&quot;,      // 编码格式</div><div class="line">    &quot;default_line_ending&quot;: &quot;unix&quot;,    // 行尾格式</div><div class="line">    &quot;font_face&quot;: &quot;Dejavu Sans Mono&quot;,  // 字体</div><div class="line">    &quot;font_size&quot;: 12,          // 字体大小</div><div class="line">    &quot;ignored_packages&quot;:</div><div class="line">    [</div><div class="line">        &quot;Markdown&quot;,</div><div class="line">        &quot;Vintage&quot;</div><div class="line">    ],</div><div class="line">    &quot;tab_size&quot;: 4,   // tab 长度</div><div class="line">    &quot;theme&quot;: &quot;Material-Theme.sublime-theme&quot;,   // 主题</div><div class="line">    &quot;translate_tabs_to_spaces&quot;: true,   // tab 转换 spaces</div><div class="line">    &quot;word_wrap&quot;: &quot;true&quot;,    // 自动换行</div><div class="line">    &quot;wrap_width&quot;: 120       // 行长度</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;SublimeText3-日常使用技巧&quot;&gt;&lt;a href=&quot;#SublimeText3-日常使用技巧&quot; class=&quot;headerlink&quot; title=&quot;SublimeText3 日常使用技巧&quot;&gt;&lt;/a&gt;SublimeText3 日常使用技巧&lt;/h4&gt;&lt;hr&gt;

    
    </summary>
    
      <category term="工具" scheme="https://julyxing.github.io/categories/%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="SublimeText3" scheme="https://julyxing.github.io/tags/SublimeText3/"/>
    
  </entry>
  
  <entry>
    <title>微信公众号支付v3总结</title>
    <link href="https://julyxing.github.io/2016/12/28/%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7%E6%94%AF%E4%BB%98v3%E6%80%BB%E7%BB%93/"/>
    <id>https://julyxing.github.io/2016/12/28/微信公众号支付v3总结/</id>
    <published>2016-12-28T14:39:05.000Z</published>
    <updated>2016-12-30T06:53:42.153Z</updated>
    
    <content type="html"><![CDATA[<p>时间: 2016年8月11日</p>
<p>说明: 文档主要描述微信公众号支付开发过程中处理流程和一些遇到的问题。</p>
<h2 id="1-准备工作"><a href="#1-准备工作" class="headerlink" title="1 准备工作"></a>1 准备工作</h2><p><img src="https://ooo.0o0.ooo/2016/10/20/58082ea530c15.png" alt="步骤"></p>
<ul>
<li>微信公众号申请，类型选择服务号或企业号，订阅号不支持微信支付功能</li>
<li>微信商户帐号申请（需要审核）</li>
<li>选择对应版本的 SDK 文件准备开发</li>
</ul>
<h2 id="2-支付原理"><a href="#2-支付原理" class="headerlink" title="2 支付原理"></a>2 支付原理</h2><p><img src="https://ooo.0o0.ooo/2016/10/20/58082e131f357.png" alt="业务流程"></p>
<h2 id="3-通知-同步、异步"><a href="#3-通知-同步、异步" class="headerlink" title="3 通知(同步、异步)"></a>3 通知(同步、异步)</h2><ul>
<li><p>3.1 同步通知</p>
<blockquote>
<p>商户根据微信支付后返回的结果来处理自己的业务。</p>
</blockquote>
</li>
<li><p>3.2 异步通知</p>
<blockquote>
<p>微信支付完成后，会通过在下单时候设置的 notify_url 通知商户支付结果，商户通过返回的结果来处理内部订单然后给微信返回处理结果，如果返回成功则说明商户校验信息正常通知微信不需要再次通知，否则微信会在一定时间内重复发通知给商户。通知频率为15/15/30/180/1800/1800/1800/1800/3600，单位：秒。</p>
</blockquote>
</li>
</ul>
<h2 id="4-开发流程"><a href="#4-开发流程" class="headerlink" title="4 开发流程"></a>4 开发流程</h2><p><a href="https://pay.weixin.qq.com/wiki/doc/api/jsapi.php?chapter=9_1" target="_blank" rel="external">官方文档: https://pay.weixin.qq.com/wiki/doc/api/jsapi.php?chapter=9_1</a></p>
<p>4.1 统一下单 unifiedorder</p>
<ul>
<li><p>4.1.1 方法中需要参数都填写，注意参数名大小写和长度</p>
</li>
<li><p>4.1.2 统一下单时签名问题</p>
</li>
<li><p>4.1.3 微信用户 openid 获取</p>
</li>
<li><p>4.1.4 加强下单时参数验证</p>
</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div></pre></td><td class="code"><pre><div class="line">public static function unifiedOrder($wxpay_config = array(), $ssl_config = array(), $proxy_config = array())</div><div class="line">&#123;</div><div class="line">    $url = &quot;https://api.mch.weixin.qq.com/pay/unifiedorder&quot;;</div><div class="line"></div><div class="line">    //检测必填参数</div><div class="line">    if (!array_key_exists(&apos;out_trade_no&apos;, $wxpay_config)) &#123;</div><div class="line">        throw new WxPayException(&quot;缺少统一支付接口必填参数 out_trade_no！&quot;);</div><div class="line">    &#125;</div><div class="line">    if (!array_key_exists(&apos;body&apos;, $wxpay_config)) &#123;</div><div class="line">        throw new WxPayException(&quot;缺少统一支付接口必填参数 body！&quot;);</div><div class="line">    &#125;</div><div class="line">    if (!array_key_exists(&apos;total_fee&apos;, $wxpay_config)) &#123;</div><div class="line">        throw new WxPayException(&quot;缺少统一支付接口必填参数 total_fee！&quot;);</div><div class="line">    &#125;</div><div class="line">    if (!array_key_exists(&apos;trade_type&apos;, $wxpay_config)) &#123;</div><div class="line">        throw new WxPayException(&quot;缺少统一支付接口必填参数 trade_type！&quot;);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    //关联参数</div><div class="line">    if (&apos;JSAPI&apos; == $wxpay_config[&apos;trade_type&apos;]) &#123;</div><div class="line">        if (!array_key_exists(&apos;openid&apos;, $wxpay_config)) &#123;</div><div class="line">            throw new WxPayException(&quot;统一支付接口中，缺少必填参数openid！trade_type为JSAPI时，openid为必填参数！&quot;);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    if (&apos;NATIVE&apos; == $wxpay_config[&apos;trade_type&apos;]) &#123;</div><div class="line">        if (!array_key_exists(&apos;product_id&apos;, $wxpay_config)) &#123;</div><div class="line">            throw new WxPayException(&quot;统一支付接口中，缺少必填参数product_id！trade_type为JSAPI时，product_id为必填参数！&quot;);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    if (!array_key_exists(&apos;notify_url&apos;, $wxpay_config)) &#123;</div><div class="line">        throw new WxPayException(&quot;缺少统一支付接口必填参数！notify_url&quot;);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    $xml = WxPayCore::toXml($wxpay_config);</div><div class="line"></div><div class="line">    $startTimeStamp = WxPayCore::getMillisecond();//请求开始时间</div><div class="line">    $response = WxPayCore::postXmlCurl($xml, $url, $proxy_config[&apos;curl_proxy_host&apos;], $proxy_config[&apos;curl_proxy_port&apos;], $ssl_config[&apos;sslcert_path&apos;], $ssl_config[&apos;sslkey_path&apos;], true);</div><div class="line"></div><div class="line">    // 响应结果</div><div class="line">    $responseArr = WxPayCore::fromXml($response);</div><div class="line"></div><div class="line">    return $responseArr;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>4.2 微信支付JSAPI</p>
<ul>
<li><p>4.2.1 统一下单成功后返回数据</p>
</li>
<li><p>4.2.2 签名验证</p>
</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div></pre></td><td class="code"><pre><div class="line">public function getJSApiParameters($UnifiedOrderResult, $key)</div><div class="line">&#123;</div><div class="line">    if (!array_key_exists(&quot;appid&quot;, $UnifiedOrderResult)</div><div class="line">        || !array_key_exists(&quot;prepay_id&quot;, $UnifiedOrderResult)</div><div class="line">        || $UnifiedOrderResult[&apos;prepay_id&apos;] == &quot;&quot;) &#123;</div><div class="line">        throw new WxPayException(&quot;参数错误&quot;);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    $timemap = time();</div><div class="line"></div><div class="line">    // 生成随机数</div><div class="line">    $o_ranchar = new Core\Utility\RandChar();</div><div class="line">    $s_ranchar = $o_ranchar-&gt;randChar(&apos;mix&apos;, 32);</div><div class="line"></div><div class="line">    // 生成签名</div><div class="line">    $sign_config = array(</div><div class="line">        &quot;appId&quot;     =&gt; $UnifiedOrderResult[&apos;appid&apos;],</div><div class="line">        &quot;timeStamp&quot; =&gt; &quot;$timemap&quot;,</div><div class="line">        &quot;nonceStr&quot;  =&gt; $s_ranchar,</div><div class="line">        &quot;package&quot;   =&gt; &quot;prepay_id=&quot; . $UnifiedOrderResult[&apos;prepay_id&apos;],</div><div class="line">        &quot;signType&quot;  =&gt; &quot;MD5&quot;,</div><div class="line">    );</div><div class="line">    $o_sign = new Core\Utility\WxPay\WxPaySign($sign_config);</div><div class="line">    $s_sign = $o_sign-&gt;makeSign($key);</div><div class="line"></div><div class="line">    $params = array(</div><div class="line">        &quot;appId&quot;     =&gt; $UnifiedOrderResult[&apos;appid&apos;],</div><div class="line">        &quot;timeStamp&quot; =&gt; &quot;$timemap&quot;,</div><div class="line">        &quot;nonceStr&quot;  =&gt; $s_ranchar,</div><div class="line">        &quot;package&quot;   =&gt; &quot;prepay_id=&quot; . $UnifiedOrderResult[&apos;prepay_id&apos;],</div><div class="line">        &quot;signType&quot;  =&gt; &quot;MD5&quot;,</div><div class="line">        &quot;paySign&quot;   =&gt; $s_sign</div><div class="line">    );</div><div class="line"></div><div class="line">    return $params;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>4.3 微信公众号内置支付功能</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line">function onBridgeReady()&#123;</div><div class="line">   WeixinJSBridge.invoke(</div><div class="line">       &apos;getBrandWCPayRequest&apos;, &#123;</div><div class="line">           &quot;appId&quot; ： &quot;wx2421b1c4370ec43b&quot;,                        //公众号名称，由商户传入</div><div class="line">           &quot;timeStamp&quot;：&quot; 1395712654&quot;,                             //时间戳，自1970年以来的秒数</div><div class="line">           &quot;nonceStr&quot; ： &quot;e61463f8efa94090b1f366cccfbbb444&quot;,       //随机串</div><div class="line">           &quot;package&quot; ： &quot;prepay_id=u802345jgfjsdfgsdg888&quot;,</div><div class="line">           &quot;signType&quot; ： &quot;MD5&quot;,                                    //微信签名方式：</div><div class="line">           &quot;paySign&quot; ： &quot;70EA570631E4BB79628FBCA90534C63FF7FADD89&quot; //微信签名</div><div class="line">       &#125;,</div><div class="line">       function(res)&#123;</div><div class="line">           if(res.err_msg == &quot;get_brand_wcpay_request：ok&quot; ) &#123;&#125;</div><div class="line">             // 使用以上方式判断前端返回,微信团队郑重提示：res.err_msg将在用户支付成功后返回    ok，但并不保证它绝对可靠。</div><div class="line">       &#125;</div><div class="line">   );</div><div class="line">&#125;</div><div class="line">if (typeof WeixinJSBridge == &quot;undefined&quot;)&#123;</div><div class="line">   if( document.addEventListener )&#123;</div><div class="line">       document.addEventListener(&apos;WeixinJSBridgeReady&apos;, onBridgeReady, false);</div><div class="line">   &#125;else if (document.attachEvent)&#123;</div><div class="line">       document.attachEvent(&apos;WeixinJSBridgeReady&apos;, onBridgeReady);</div><div class="line">       document.attachEvent(&apos;onWeixinJSBridgeReady&apos;, onBridgeReady);</div><div class="line">   &#125;</div><div class="line">&#125;else&#123;</div><div class="line">   onBridgeReady();</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>将 微信支付 JSAPI 生成的数据作为微信内置函数 <em>WeixinJSBridge.invoke()</em> 发起 <em>getBrandWCPayRequest</em> 请求时的参数，如果参数正确当点击支付时候可以在微信公众号中调用微信客户端支付功能。</p>
<p>4.4 同步通知流程处理<br>商户根据微信内置函数调用支付结果来处理业务，例如：当支付返回 <code>get_brand_wcpay_request：ok</code> 说明支付成功，<code>get_brand_wcpay_request：fail</code> 或  <code>get_brand_wcpay_request：cancle</code> 说明支付失败，但是 <em>返回数据不一定可靠</em>。</p>
<p>4.5 异步通知处理<br>微信会通过统一下单时设置的 notify_url 向商户发送支付结果通知，商户应该根据返回的数据对订单信息和商户信息等重要信息验证<br>避免订单错误导致资金错误，然后更新内部订单状态，最后将处理后的结果返回给微信,如果微信收到商户的应答不是成功或超时，微信认为通知失败，微信会通过一定的策略定期重新发起通知，尽可能提高通知的成功率，但微信不保证通知最终能成功。 （通知频率为15/15/30/180/1800/1800/1800/1800/3600，单位：秒）</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">&lt;xml&gt;</div><div class="line">  &lt;return_code&gt;&lt;![CDATA[SUCCESS]]&gt;&lt;/return_code&gt;</div><div class="line">  &lt;return_msg&gt;&lt;![CDATA[OK]]&gt;&lt;/return_msg&gt;</div><div class="line">&lt;/xml&gt;</div><div class="line">------------------------------------------------------------</div><div class="line">&lt;xml&gt;</div><div class="line">  &lt;return_code&gt;&lt;![CDATA[FAIL]]&gt;&lt;/return_code&gt;</div><div class="line">  &lt;return_msg&gt;&lt;![CDATA[商户返回失败的原因]]&gt;&lt;/return_msg&gt;</div><div class="line">&lt;/xml&gt;</div></pre></td></tr></table></figure>
<h2 id="5-常见问题"><a href="#5-常见问题" class="headerlink" title="5 常见问题"></a>5 常见问题</h2><ul>
<li><p>5.1 统一下单时签名问题</p>
</li>
<li><p>5.2 支付时签名验证失败</p>
</li>
<li><p>5.3 异步通知未响应</p>
</li>
</ul>
<p>Q&amp;A: 签名错误</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">签名问题大部分是因为生成签名时参数不一致，例如：在统一下单时候需要传递签名参数和其他参数，个人感觉微信在调用生成预支付订单时候内部也产生签名并且</div><div class="line">和传递过来的签名进行对比验证，当不一致时就会提示签名错误，原因就是在下单时商户主动生成的签名参数和微信内部生成参数不一致，当签名不一致时建议将方</div><div class="line">法所需的参数作为生成签名的参数，然后再将生成签名传递。</div></pre></td></tr></table></figure>
<p>Q&amp;A: 异步通知未响应</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">1. 统一下单时 notify_url 是否设置</div><div class="line">2. notify_url 是否符合规范：1.不能带有参数，例如：https://pay.weixin.qq.com/notify.php?wx=20160811  2.能够访问</div><div class="line">3. 检查接口是否有访问权限设置</div><div class="line">4. 通过 error_log 检查是否有日志文件产生</div></pre></td></tr></table></figure>
<h2 id="6-总结"><a href="#6-总结" class="headerlink" title="6 总结"></a>6 总结</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">    在微信公众号支付开发过程中，遇到很多问题有些官方文档没怎么描述清楚，导致后面花较长时间去测试原因。然后是理解到同步和异步通知的区别并且学习到 </div><div class="line">error_log 日志功能的好处，通过生成的日志文件方便去解决问题和优化，远远超过自己预测情况时没有数据来对比分析。</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;时间: 2016年8月11日&lt;/p&gt;
&lt;p&gt;说明: 文档主要描述微信公众号支付开发过程中处理流程和一些遇到的问题。&lt;/p&gt;
&lt;h2 id=&quot;1-准备工作&quot;&gt;&lt;a href=&quot;#1-准备工作&quot; class=&quot;headerlink&quot; title=&quot;1 准备工作&quot;&gt;&lt;/a&gt;1 准
    
    </summary>
    
      <category term="支付" scheme="https://julyxing.github.io/categories/%E6%94%AF%E4%BB%98/"/>
    
    
      <category term="WxPay" scheme="https://julyxing.github.io/tags/WxPay/"/>
    
  </entry>
  
  <entry>
    <title>React-nativeAndorid环境配置</title>
    <link href="https://julyxing.github.io/2016/12/28/React-nativeAndorid%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/"/>
    <id>https://julyxing.github.io/2016/12/28/React-nativeAndorid环境配置/</id>
    <published>2016-12-28T14:37:39.000Z</published>
    <updated>2016-12-30T06:53:42.153Z</updated>
    
    <content type="html"><![CDATA[<p>参考资料：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">官方github https://github.com/facebook/react-native</div><div class="line"></div><div class="line">React-Native 中文网站 http://reactnative.cn</div></pre></td></tr></table></figure></p>
<h2 id="1-Java-运行环境安装及配置"><a href="#1-Java-运行环境安装及配置" class="headerlink" title="1 Java 运行环境安装及配置"></a>1 Java 运行环境安装及配置</h2><p>1.1 下载 Java JDK</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">链接： http://www.oracle.com/technetwork/java/javase/overview/index.html</div></pre></td></tr></table></figure>
<p>1.2 安装及配置</p>
<blockquote>
<p>JDK 安装完成后，鼠标右键 我的电脑–&gt; 属性 –&gt; 高级系统设置 –&gt; 环境变量 选中 <em>系统变量</em> 中 <em>Path</em> 在 变量值后面增加 JDK 功能路径<br>例如：C:\Program Files\Java\jdk1.8.0_91\bin<br>然后 新建一个变量名 <em>JAVA_HOME</em> 变量值输入 C:\Program Files\Java\jdk1.8.0_91 (JDK 安装路径)</p>
</blockquote>
<p>1.3 测试</p>
<blockquote>
<p>在 windows 电脑命令提示符中输入 java 或 java -version 可以看到 JDK 的描述信息说明安装成功。</p>
</blockquote>
<h2 id="2-Android-SDK-安装及配置"><a href="#2-Android-SDK-安装及配置" class="headerlink" title="2 Android SDK 安装及配置"></a>2 Android SDK 安装及配置</h2><p>2.1 下载<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">链接：http://www.androiddevtools.cn/</div><div class="line"></div><div class="line">说明：建议下载 installer_r24.4.1-windows.exe</div></pre></td></tr></table></figure></p>
<p>2.2 安装及配置</p>
<blockquote>
<p>Andorid SDK 安装完成之后，仿照 Java JDK 配置，新建一个 <em>ANDROID_HOME</em> 变量值输入 Android SDK 的安装路径，例如：D:\Program Files\android-sdk</p>
</blockquote>
<p>2.3 更新</p>
<p>如果安装完成之后 Andorid SDK Manger 窗口没有打开，自己可以去安装目录下<br>打开，然后安装指定的包。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">Tools</div><div class="line">    Android SDK Tools</div><div class="line">    Android SDK Platform-tools</div><div class="line">    Android SDK Build-tools        23.0.1 (指定版本)</div><div class="line">Andorid 6.0 (API 23)</div><div class="line">    SDK Platform</div><div class="line">    Intel x86 Atom_64 System Image</div><div class="line">    Intel x86 Atom System Image</div><div class="line">Extras</div><div class="line">    Andorid Support Repository     (或 Local Maven repository for Support Libraries)</div></pre></td></tr></table></figure></p>
<blockquote>
<p>说明：因为可以直接将别人安装后的压缩包解压放在指定目录，然后添加到环境变<br>量中就可以用，所以不推荐自己直接下载和安装包，原因是 Android SDK 的源在国<br>外如果不使用代理那么下载和安装以及更新会特别慢。</p>
</blockquote>
<h2 id="3-Genymotion-安装及配置"><a href="#3-Genymotion-安装及配置" class="headerlink" title="3 Genymotion 安装及配置"></a>3 Genymotion 安装及配置</h2><p>3.1 下载<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">链接： https://www.genymotion.com/pricing-and-licensing/</div><div class="line">说明： 选择 BASIC 版本，该版本对个人免费开放，下载前需要注册帐号，在后面项目开放中也需要帐号，所以建议每个人都注册一个帐号。</div></pre></td></tr></table></figure></p>
<p>3.2 安装及配置</p>
<blockquote>
<p>软件安装完之后创建一个 <em>虚拟设备</em>(前提已安装 VirtualBox),然后自己根据情况创建一个设备，后面就会出现下载的界面，等待下载完成。</p>
</blockquote>
<h2 id="4-运行环境安装"><a href="#4-运行环境安装" class="headerlink" title="4 运行环境安装"></a>4 运行环境安装</h2><p>以官方提供的 Demo 项目为例：</p>
<p>参考链接：<a href="http://bbs.reactnative.cn/topic/11//11" target="_blank" rel="external">http://bbs.reactnative.cn/topic/11//11</a></p>
<p>下载链接：<a href="http://pan.baidu.com/s/1i5HEUgt" target="_blank" rel="external">http://pan.baidu.com/s/1i5HEUgt</a> 解压密码：reactnative.cn<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">打开 Genymotion 并启动 设备</div><div class="line">然后进入解压后的目录，执行下面代码</div><div class="line">npm install -g react-native-cli</div><div class="line">react-native run-android</div><div class="line">最后可以看到 虚拟设备上面显示 Welcome to React Native! 至此，Android 在 windows 开放环境已经完成配置完成。</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;参考资料：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=
    
    </summary>
    
      <category term="React" scheme="https://julyxing.github.io/categories/React/"/>
    
    
      <category term="React-Native" scheme="https://julyxing.github.io/tags/React-Native/"/>
    
  </entry>
  
  <entry>
    <title>debian8环境配置</title>
    <link href="https://julyxing.github.io/2016/12/28/debian8%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/"/>
    <id>https://julyxing.github.io/2016/12/28/debian8环境配置/</id>
    <published>2016-12-28T14:36:13.000Z</published>
    <updated>2016-12-30T06:53:42.153Z</updated>
    
    <content type="html"><![CDATA[<p>时间：2016年6月7日 10:42:45</p>
<h2 id="说明："><a href="#说明：" class="headerlink" title="说明："></a>说明：</h2><p>服务器：    debian7 32 位<br>项目代码：VirtualBox 共享目录<br>缺点：window 和 linux 文件协议不同，导致在写文件和修改文件时候权限不够，或提示该文件只可读</p>
<p>因为本地网站缓存文件不能写入，导致存在一些本地开放环境中没有出现的问题，在测试环境中出现，所以准备将开放环境迁移到 debian 8 下，保证文件协议一致。</p>
<h2 id="准备工作："><a href="#准备工作：" class="headerlink" title="准备工作："></a>准备工作：</h2><ol>
<li>debian 8 镜像</li>
<li>debian8 更新源</li>
</ol>
<h2 id="操作步骤："><a href="#操作步骤：" class="headerlink" title="操作步骤："></a>操作步骤：</h2><ol>
<li>在 <a href="https://www.debian.org/" target="_blank" rel="external">debian 官网</a> 中下载 镜像，然后通过 UISO 把镜像 <em>烧录</em> 到 U 盘中，然后通过<br>U 启动安装 debian 系统 （注：本次安装带有桌面系统镜像，安装步骤略）</li>
<li>系统安装完成后设置系统更新源，因为在安装系统时候未设置系统安全更新，原因是 debian 安装更新的服务器一般设置在国外不同于软件更新源，为更新过慢所以略过安全更新步骤。本次选择的 debian8 更新源是<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">deb http://mirrors.163.com/debian/ jessie main non-free contrib</div><div class="line">deb http://mirrors.163.com/debian/ jessie-updates main non-free contrib</div><div class="line">deb http://mirrors.163.com/debian/ jessie-backports main non-free contrib</div><div class="line">deb-src http://mirrors.163.com/debian/ jessie main non-free contrib</div><div class="line">deb-src http://mirrors.163.com/debian/ jessie-updates main non-free contrib</div><div class="line">deb-src http://mirrors.163.com/debian/ jessie-backports main non-free contrib</div><div class="line">deb http://mirrors.163.com/debian-security/ jessie/updates main non-free contrib</div><div class="line">deb-src http://mirrors.163.com/debian-security/ jessie/updates main non-free contrib</div></pre></td></tr></table></figure>
</li>
</ol>
<p>因为 163 提供了系统基础更新源，但是很多系统软件版本还是比较低，所以通过 <code>dotdeb</code> 源来更新软件版本<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">sudo -s</div><div class="line">wget -O- http://www.dotdeb.org/dotdeb.gpg | apt-key add -</div><div class="line">echo deb http://dotdeb.90g.org/ jessie all &gt; /etc/apt/sources.list.d/dotdeb.list</div></pre></td></tr></table></figure></p>
<p>然后执行<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">sudo -s</div><div class="line">apt-get update</div><div class="line">apt-get upgrade</div></pre></td></tr></table></figure></p>
<p>以上完成了系统基础软件更新完成</p>
<ol>
<li>开发软件的安装<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">git</div><div class="line">php5-fpm php5-cli mysql5.6-server mysql5.6-client nginx</div><div class="line">php5-curl php5-memeched php5-mysqlnd php5-imagick php5-gd</div><div class="line">composer</div></pre></td></tr></table></figure>
</li>
</ol>
<p>注：因为 debian8 中 mysql 默认版本是 5.7 所以如果要安装 mysql 5.6 版本可参照下面办法<br><a href="http://dev.mysql.com/downloads/repo/apt/" target="_blank" rel="external">mysql</a> 官方不同版本 mysql 安装源<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">sudo -s</div><div class="line">wget http://dev.mysql.com/get/mysql-apt-config_0.3.6-1debian8_all.d eb</div><div class="line">dpkg -i mysql-apt-config_0.3.6-1debian8_all.deb</div></pre></td></tr></table></figure></p>
<p>在弹出窗口选择 <code>server</code> 然后 选择 5.6 版本 然后 <code>apply</code><br>然后执行<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">sudo -s</div><div class="line">apt-get update</div><div class="line">apt-get upgrade</div><div class="line">apt-get install mysql5.6-server mysql5.6-client</div></pre></td></tr></table></figure></p>
<p>这样 mysql 5.6 版本安装成功<br>注： 在安装过程中可以使用 <code>aptitude search packagename</code> 检查安装包的版本</p>
<ol>
<li>开放环境配置<br>开放软件已经安装完成，然后通过 <code>git clone</code> 项目代码，然后部署开放发环境、调整缓存目录权限。</li>
<li>测试<br>测试本地开放环境、缓存文件是否写入等。</li>
</ol>
<h2 id="总结："><a href="#总结：" class="headerlink" title="总结："></a>总结：</h2><p>本次开放环境从 debian7 到 debian8 迁移，出现最多的问题就是在于更新源没有修改，在最早一次安装中，使用的是 debian7 更新源，导致在安装软件时候出现较多的软件依赖问题，后来检查到 debian 每个版本都有属于自己的代号，例如： debian7 –&gt; wheezy、debian8 –&gt;jessie ，所以在更新源中代号应该也要替换，这样才能保证安装到当前版本系统软件稳定版本，从而不会出现软件版本依赖问题。其次，mysql 的安装，因为系统默认版本是 5.7 所以找了很多办法去调整 mysql 版本，最后在 mysql 官网找到一篇文章讲述不同系统版本安装不同版本的 mysql 方法，所以最后解决了 mysql5.6 安装问题。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;时间：2016年6月7日 10:42:45&lt;/p&gt;
&lt;h2 id=&quot;说明：&quot;&gt;&lt;a href=&quot;#说明：&quot; class=&quot;headerlink&quot; title=&quot;说明：&quot;&gt;&lt;/a&gt;说明：&lt;/h2&gt;&lt;p&gt;服务器：    debian7 32 位&lt;br&gt;项目代码：VirtualB
    
    </summary>
    
      <category term="Linux" scheme="https://julyxing.github.io/categories/Linux/"/>
    
    
      <category term="debian" scheme="https://julyxing.github.io/tags/debian/"/>
    
  </entry>
  
  <entry>
    <title>electron-prebuilt安装</title>
    <link href="https://julyxing.github.io/2016/12/28/electron-prebuilt%E5%AE%89%E8%A3%85/"/>
    <id>https://julyxing.github.io/2016/12/28/electron-prebuilt安装/</id>
    <published>2016-12-28T14:34:45.000Z</published>
    <updated>2016-12-30T06:53:42.153Z</updated>
    
    <content type="html"><![CDATA[<p>npm 代理：<a href="http://npm.taobao.org" target="_blank" rel="external">淘宝代理</a></p>
<h2 id="1-linux-系统安装"><a href="#1-linux-系统安装" class="headerlink" title="1 linux 系统安装"></a>1 linux 系统安装</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">node -v             验证 node 安装</div><div class="line">npm -v              检查 npm　版本，如果版本过低可以使用 npm install -g npm 升级</div><div class="line">npm instlal electron-prebuilt --save-dev 将 electron 安装当前项目中</div><div class="line">如果全局安装可以使用 npm install -g electron</div><div class="line">因为 electron-prebuilt 在安装过程中需要下载可能较慢，建议 npm 切换到国内代理。</div></pre></td></tr></table></figure>
<h2 id="2-window-系统安装"><a href="#2-window-系统安装" class="headerlink" title="2 window 系统安装"></a>2 window 系统安装</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">打开命令提示符</div><div class="line">node -v             验证 node 安装</div><div class="line">npm -v              检查 npm 版本</div><div class="line">npm install electron-prebuilt --save-dev    安装 electron</div><div class="line">在 windows 在安装过程中会出现安装失败问题，原因主要是在下载 electron-prebuilt 中失败，导致最后安装 electron 失败。</div><div class="line">解决办法：</div><div class="line">访问 https://npm.taobao.org/mirrors/electron 手动下载当前系统对应版本的 electron 例如：electron-v1.2.3-win32-x64.zip 版本号可以在安装过程中</div><div class="line">看到。然后将下载的 electron-prebuilt 压缩包放在 C:\Users\Administrator\.electron 下，最后在项目目录下重新执行 npm install -g electron-prebuilt </div><div class="line">可以发现 electron 安装成功。</div></pre></td></tr></table></figure>
<h2 id="3-总结"><a href="#3-总结" class="headerlink" title="3 总结"></a>3 总结</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">electron 安装失败主要原因，一般情况下都是因为下载较慢导致失败，如果手动下载安装时需要的资源包，这样可以减小安装失败几率。</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;npm 代理：&lt;a href=&quot;http://npm.taobao.org&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;淘宝代理&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;1-linux-系统安装&quot;&gt;&lt;a href=&quot;#1-linux-系统安装&quot; class=&quot;h
    
    </summary>
    
    
      <category term="electron" scheme="https://julyxing.github.io/tags/electron/"/>
    
  </entry>
  
  <entry>
    <title>Git日常命令总结</title>
    <link href="https://julyxing.github.io/2016/12/28/Git%E6%97%A5%E5%B8%B8%E5%91%BD%E4%BB%A4%E6%80%BB%E7%BB%93/"/>
    <id>https://julyxing.github.io/2016/12/28/Git日常命令总结/</id>
    <published>2016-12-28T14:30:56.000Z</published>
    <updated>2016-12-30T06:53:42.153Z</updated>
    
    <content type="html"><![CDATA[<p>Git 是一种开源、分布式 VCS(版本控制)工具，设计目的是为了高效、快速解决项目中各种问题。</p>
<a id="more"></a>
<p>用户配置<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">git config --global user.name  JulyXing</div><div class="line">git config --global user.email julyxing@163.com</div></pre></td></tr></table></figure></p>
<p>1 克隆<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git clone git@github.com:JulyXing/Blog.git</div></pre></td></tr></table></figure></p>
<p>2 更新<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">git pull （默认拉取 master 分支代码）</div><div class="line">当存在分支， 为避免分支代码混乱，使用</div><div class="line">git pull origin bname</div></pre></td></tr></table></figure></p>
<p>3 提交<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">git add files                  将文件添加工作区</div><div class="line">git commit -m &apos;comment&apos;</div><div class="line">git push （默认向 master 分支提交代码）</div><div class="line">当存在分支，为避免分支提交错误，使用</div><div class="line">git push origin bname</div></pre></td></tr></table></figure></p>
<p>4 冲突<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">git checkout Readme.md         忽略文件</div><div class="line">git reset e9cb6f38             回滚版本至指定 commit 版本号</div><div class="line">git checkout 0.0.1             回滚到指定的 tag 0.0.1 版本</div></pre></td></tr></table></figure></p>
<p>5 标签<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">git tag                        查看标签列表</div><div class="line">git tag -v                     查看标签名</div><div class="line">git tag -a tname -m &apos;comment&apos;  创建 tname 标签，描述为 comment</div><div class="line">git push origin tname          提交标签</div><div class="line">git tag -n                     查看标签描述</div><div class="line">git push origin tname          推送标签</div><div class="line">git tag -d  tname              删除本地标签</div><div class="line">git push origin :tname         删除远端标签</div></pre></td></tr></table></figure></p>
<p>6 分支</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">git branch                 查看本地分支</div><div class="line">git branch -a              查看远端分支</div><div class="line">git branch bname           创建分支</div><div class="line">git push origin bname      向远端推送分支</div><div class="line">git branch -d bname        删除本地分支</div><div class="line">git push origin :bname     删除远端分支</div><div class="line">git checkout bname         切换分支</div><div class="line">git checkout -b bname      创建并切换分支</div><div class="line">git merage --no-ff bname   合并分支(指向新节点)</div></pre></td></tr></table></figure>
<p>注： bname 为 branch_name 缩写。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Git 是一种开源、分布式 VCS(版本控制)工具，设计目的是为了高效、快速解决项目中各种问题。&lt;/p&gt;
    
    </summary>
    
      <category term="工具" scheme="https://julyxing.github.io/categories/%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="Git" scheme="https://julyxing.github.io/tags/Git/"/>
    
  </entry>
  
  <entry>
    <title>调试</title>
    <link href="https://julyxing.github.io/2016/12/16/%E8%B0%83%E8%AF%95/"/>
    <id>https://julyxing.github.io/2016/12/16/调试/</id>
    <published>2016-12-16T08:25:57.000Z</published>
    <updated>2016-12-16T08:40:18.774Z</updated>
    
    <content type="html"><![CDATA[<p>说明： 随着现在网站业务功能越来越多，很多时候不能很快的分析到问题产生的原因。所以需要一些办法来提高分析的问题的效率，目前我自己常用的是写日志文件并去网上找一些比较合适的调试办法。</p>
<a id="more"></a>
<h2 id="1-PHP"><a href="#1-PHP" class="headerlink" title="1 PHP"></a>1 PHP</h2><h3 id="1-1-Xdebug"><a href="#1-1-Xdebug" class="headerlink" title="1.1 Xdebug"></a>1.1 Xdebug</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo apt-get install php5-xdebug</div></pre></td></tr></table></figure>
<h3 id="1-2-php-错误日志"><a href="#1-2-php-错误日志" class="headerlink" title="1.2 php 错误日志"></a>1.2 php 错误日志</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">sudo vi /etc/php5/fpm/pool.d/www.conf</div><div class="line"></div><div class="line">#php_admin_value[error_log] = /var/log/fpm-php.www.log  取消注释</div><div class="line">#php_flag[display_errors] = on                          开发环境建议开启,配合调试工具使用</div><div class="line"></div><div class="line">sudo touch /var/log/fpm-php.www.log</div><div class="line">sudo chown www-data:www-data /var/log/fpm-php.www.log</div><div class="line"></div><div class="line">sudo tailf /var/log/fpm-php.www.log</div></pre></td></tr></table></figure>
<h3 id="1-3-error-log-使用"><a href="#1-3-error-log-使用" class="headerlink" title="1.3 error_log 使用"></a>1.3 error_log 使用</h3><p>了解 <a href="http://php.net/manual/zh/function.error-log.php" target="_blank" rel="external">error_log</a> 用法</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">error_log()     发送错误信息到某个地方</div><div class="line">bool error_log ( string $message [, int $message_type = 0 [, string $destination [, string $extra_headers ]]] )</div><div class="line"></div><div class="line">把错误信息发送到 web 服务器的错误日志，或者到一个文件里。</div></pre></td></tr></table></figure>
<p>目前功能包（API-*）目录结构是：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">| - lib             系统代码文件</div><div class="line">|   - Controller    控制器定义文件</div><div class="line">|   - Model         模型定义文件</div><div class="line">|       - Dao       数据访问对象定义文件</div><div class="line">| - share</div><div class="line">|   - test          单元测试代码文件</div></pre></td></tr></table></figure>
<p>配合目录结构的一致性，所以建议把日志文件的路径设置在 <code>/var/www/dahao.de/_api.git/var/log</code>，独立功能包接口需要写日志请独立标明目录和文件名方便查找。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">| - lib             系统代码文件</div><div class="line">|   - Controller    控制器定义文件</div><div class="line">|   - Model         模型定义文件</div><div class="line">|       - Dao       数据访问对象</div><div class="line">| - share</div><div class="line">|   - test          单元测试代码文件</div><div class="line">| - var             生成的数据文件</div><div class="line">|   - log           日志文件</div></pre></td></tr></table></figure>
<p>通过 <em>error_log</em> 方法写的日志文件内容可以快速分析问题可能产生的原因，日志文件内容请根据情况来保存。</p>
<h2 id="2-Mysql"><a href="#2-Mysql" class="headerlink" title="2 Mysql"></a>2 Mysql</h2><h3 id="2-1-错误日志"><a href="#2-1-错误日志" class="headerlink" title="2.1 错误日志"></a>2.1 错误日志</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo tailf /var/log/mysql/error.log</div></pre></td></tr></table></figure>
<h3 id="2-2-执行日志"><a href="#2-2-执行日志" class="headerlink" title="2.2 执行日志"></a>2.2 执行日志</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">sudo vi /etc/mysql/mysql.cnf</div><div class="line"></div><div class="line">#general_log_file        = /var/log/mysql/mysql.log         取消注释</div><div class="line">#general_log             = 1                                取消注释</div><div class="line"></div><div class="line">sudo tailf /var/log/mysql/mysql.log</div></pre></td></tr></table></figure>
<h2 id="3-Nignx"><a href="#3-Nignx" class="headerlink" title="3 Nignx"></a>3 Nignx</h2><h3 id="3-1-错误日志"><a href="#3-1-错误日志" class="headerlink" title="3.1 错误日志"></a>3.1 错误日志</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo tailf /var/log/nginx/error.log</div></pre></td></tr></table></figure>
<h3 id="3-2-调试日志"><a href="#3-2-调试日志" class="headerlink" title="3.2 调试日志"></a>3.2 调试日志</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">开发环境调调整 api.dahao.de</div><div class="line">sudo vi /var/www/dahao.de/_api.git/etc/nginx/sites-avaliable/api.dahao.de</div><div class="line"></div><div class="line">error_log               /var/www/dahao.de/~log/api-error.log debug;      开发环境</div><div class="line">#error_log               /dev/null crit;                                 正式环境</div></pre></td></tr></table></figure>
<h3 id="3-3-请求日志"><a href="#3-3-请求日志" class="headerlink" title="3.3 请求日志"></a>3.3 请求日志</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo tailf /var/www/dahao.de/~log/api.log</div></pre></td></tr></table></figure>
<h2 id="4-JavaScript"><a href="#4-JavaScript" class="headerlink" title="4 JavaScript"></a>4 JavaScript</h2><h3 id="4-1-调试命令"><a href="#4-1-调试命令" class="headerlink" title="4.1 调试命令"></a>4.1 调试命令</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">console.log();</div><div class="line">console.info();</div><div class="line">console.warn();</div></pre></td></tr></table></figure>
<h3 id="4-2-断点调试"><a href="#4-2-断点调试" class="headerlink" title="4.2 断点调试"></a>4.2 断点调试</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">使用 chrome 断点调试功能，因为自己也使用不熟练，所以具体办法请在网上查找。</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;说明： 随着现在网站业务功能越来越多，很多时候不能很快的分析到问题产生的原因。所以需要一些办法来提高分析的问题的效率，目前我自己常用的是写日志文件并去网上找一些比较合适的调试办法。&lt;/p&gt;
    
    </summary>
    
      <category term="PHP" scheme="https://julyxing.github.io/categories/PHP/"/>
    
      <category term="Debug" scheme="https://julyxing.github.io/categories/PHP/Debug/"/>
    
    
      <category term="PHP" scheme="https://julyxing.github.io/tags/PHP/"/>
    
      <category term="Debug" scheme="https://julyxing.github.io/tags/Debug/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://julyxing.github.io/2016/12/15/hello-world/"/>
    <id>https://julyxing.github.io/2016/12/15/hello-world/</id>
    <published>2016-12-14T16:00:00.000Z</published>
    <updated>2016-12-30T06:53:42.153Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
    
    </summary>
    
    
  </entry>
  
</feed>
